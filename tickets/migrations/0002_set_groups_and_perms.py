# Generated by Django 4.1 on 2022-08-16 17:34

import logging

from django.db import migrations
from django.contrib.auth.models import Group, Permission
from django.core.management.sql import emit_post_migrate_signal


logger = logging.getLogger(__name__)

public_group_permissions = {
    "offerer": [],
    "unapproved_offerer": [],
    "buyer": [],
    "regulator": [],
}


def add_group_permissions(apps, schema_editor):
    # https://stackoverflow.com/questions/25024795/django-1-7-where-to-put-the-code-to-add-groups-programmatically/25803284#25803284

    db_alias = schema_editor.connection.alias
    try:
        emit_post_migrate_signal(2, False, "default")
    except TypeError:  # Django < 1.8
        emit_post_migrate_signal([], 2, False, "default", db_alias)

    for group in public_group_permissions:
        role, created = Group.objects.get_or_create(name=group)
        logger.info(f"{group} Group created")
        for perm in public_group_permissions[group]:
            role.permissions.add(Permission.objects.get(codename=perm))
            logger.info(f"Permitting {group} to {perm}")
        role.save()


class Migration(migrations.Migration):

    dependencies = [
        ("tickets", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(add_group_permissions),
    ]
